version: '2'
networks: 
  jh_kafka:
    name: jh_kafka
services:
  zookeeper:
    volumes: 
      - ./test/:/home/test/
    # stdin_open: true
    networks: 
      - jh_kafka
    image: ubuntu:customKafkaServer
    hostname: zookeeper_Host
    container_name: zookeeper_Container
    command: [
      "bash", "-c",
      "bin/zookeeper-server-start.sh config/zookeeper.properties"
    ]
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
  broker1:
    depends_on: 
      - zookeeper
    volumes: 
      - ./test/:/home/test/
    networks: 
      - jh_kafka
    image: ubuntu:customKafkaServer
    hostname: broker1
    container_name: broker1
    ports: 
      - "19092:19092"
      - "9092:9092"
    # stdin_open: true # docker run -i
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENERS: EXTERNAL://:19092,INTERNAL://:9092
      KAFKA_ADVERTISED_LISTENERS: EXTERNAL://localhost:19092,INTERNAL://broker1:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    command: ["bash", "-c",
    "bin/kafka-server-start.sh config/server.properties 
    --override broker.id=$${KAFKA_BROKER_ID} 
    --override zookeeper.connect=$${KAFKA_ZOOKEEPER_CONNECT} 
    --override listeners=$${KAFKA_LISTENERS} 
    --override advertised.listeners=$${KAFKA_ADVERTISED_LISTENERS} 
    --override inter.broker.listener.name=$${KAFKA_INTER_BROKER_LISTENER_NAME} 
    --override listener.security.protocol.map=$${KAFKA_LISTENER_SECURITY_PROTOCOL_MAP}"
    ]
  broker2:
    depends_on: 
      - zookeeper
    volumes: 
      - ./test/:/home/test/
    networks: 
      - jh_kafka
    image: ubuntu:customKafkaServer
    hostname: broker2
    container_name: broker2
    ports: 
      - "19093:19093"
    # stdin_open: true # docker run -i
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENERS: EXTERNAL://:19093,INTERNAL://:9093
      KAFKA_ADVERTISED_LISTENERS: EXTERNAL://localhost:19093,INTERNAL://broker2:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    command: ["bash", "-c",
    "bin/kafka-server-start.sh config/server.properties 
    --override broker.id=$${KAFKA_BROKER_ID} 
    --override zookeeper.connect=$${KAFKA_ZOOKEEPER_CONNECT} 
    --override listeners=$${KAFKA_LISTENERS} 
    --override advertised.listeners=$${KAFKA_ADVERTISED_LISTENERS} 
    --override inter.broker.listener.name=$${KAFKA_INTER_BROKER_LISTENER_NAME} 
    --override listener.security.protocol.map=$${KAFKA_LISTENER_SECURITY_PROTOCOL_MAP}"
    ]
  broker3:
    depends_on: 
      - zookeeper
    volumes: 
      - ./test/:/home/test/
    networks: 
      - jh_kafka
    image: ubuntu:customKafkaServer
    hostname: broker3
    container_name: broker3
    ports: 
      - "19094:19094"
    # stdin_open: true # docker run -i
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENERS: EXTERNAL://:19094,INTERNAL://:9094
      KAFKA_ADVERTISED_LISTENERS: EXTERNAL://localhost:19094,INTERNAL://broker3:9094
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    command: ["bash", "-c",
    "bin/kafka-server-start.sh config/server.properties 
    --override broker.id=$${KAFKA_BROKER_ID} 
    --override zookeeper.connect=$${KAFKA_ZOOKEEPER_CONNECT} 
    --override listeners=$${KAFKA_LISTENERS} 
    --override advertised.listeners=$${KAFKA_ADVERTISED_LISTENERS} 
    --override inter.broker.listener.name=$${KAFKA_INTER_BROKER_LISTENER_NAME} 
    --override listener.security.protocol.map=$${KAFKA_LISTENER_SECURITY_PROTOCOL_MAP}"
    ]
  client:
    depends_on: 
      - zookeeper
    networks: 
      - jh_kafka
    image: ubuntu:customKafkaServer
    hostname: client_HOST
    container_name: client_CONTAINER
    stdin_open: true # docker run -i

   